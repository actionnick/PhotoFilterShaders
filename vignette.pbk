<languageVersion : 1.0;>

kernel Vignette
<   namespace : "Vignette";
    vendor : "Paperless Post";
    version : 1;
>
{
    input image4 src;
    output pixel4 dst;
    
    parameter float4 bBox
    <
        minValue:float4(0.0,0.0,0.0,0.0);
        maxValue:float4(1000.0,1000.0,1000.0,1000.0);
        defaultValue:float4(0.0,600.0,0.0,400.0);
    >;
    
    parameter float2 center
    <
        minValue:float2(0.0,0.0);
        maxValue:float2(500.0,500.0);
        defaultValue:float2(300.0,200.0);
    >;
    
    parameter float exponent
    <
        minValue:float(-10.0);
        maxValue:float(10.0);
        defaultValue:float(0.0);
    >;
    
    parameter float factor
    <
        minValue:float(-10.0);
        maxValue:float(10.0);
        defaultValue:float(0.0);
    >;
    
    parameter float3 color
    <
        minValue:float3(0.0,0.0,0.0);
        maxValue:float3(1.0,1.0,1.0);
        defaultValue:float3(0.0,0.0,0.0);
    >;
    
    void
    evaluatePixel()
    {
        dst = sampleNearest(src, outCoord());           
        
        float dist = distance(center, outCoord());
        dist = dist/distance(center,float2(bBox[0],bBox[3]));     // normalize the distance between 0 and 1
        float colorUp = factor * pow(dist,exponent);    // used to colorize darken areas
        dist = 1.0 - factor * pow(dist,exponent);       // darken colors in relation to distance from center

        dst.r = dst.r * dist;
        dst.r = dst.r + (colorUp * color.r);
        dst.g = dst.g * dist;
        dst.g = dst.g + (colorUp * color.g);
        dst.b = dst.b * dist;
        dst.b = dst.b + (colorUp * color.b);
    }
}
